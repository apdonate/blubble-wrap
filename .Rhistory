# Summarize the frequency of each type of cannabis used
cannabis_usage_summary <- eligible_data %>%
summarise(across(all_of(cannabis_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Cannabis_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Cannabis_Type = recode(Cannabis_Type, !!!cannabis_labels))
# View the table with descriptive labels and frequencies for each type of cannabis
cannabis_usage_summary
# Summarize the frequency of each type of cannabis used
cannabis_usage_summary <- eligible_data %>%
summarise(across(all_of(cannabis_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Cannabis_Type", values_to = "Frequency")
# View the table with frequencies for each type of cannabis
cannabis_usage_summary
# Define the columns for types of cannabis
cannabis_columns <- paste0("cannabis_type30___", 1:7)
# Define descriptive labels for each type of cannabis
cannabis_labels <- c(
"cannabis_type_1" = "Hash",
"cannabis_type_2" = "Pot",
"cannabis_type_3" = "Skunk",
"cannabis_type_4" = "Legal cannabis (less than 0,2% THC): {type}",
"cannabis_type_5" = "Cannabis prescription (e.g. Bedrocan, Bediol): {type}",
"cannabis_type_6" = "Other cannabis type,  smoked or inhaled {other cannabis}",
"cannabis_type_7" = "Unknown type"
)
# Summarize the frequency of each type of cannabis used
cannabis_usage_summary <- eligible_data %>%
summarise(across(all_of(cannabis_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Cannabis_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Cannabis_Type = recode(Cannabis_Type, !!!cannabis_labels))
# View the table with descriptive labels and frequencies for each type of cannabis
cannabis_usage_summary
# Define the columns for types of cannabis
cannabis_columns <- paste0("cannabis_type30___", 1:7)
# Define descriptive labels for each type of cannabis
cannabis_labels <- c(
"cannabis_type30___1" = "Hash",
"cannabis_type30___2" = "Pot",
"cannabis_type30___3" = "Skunk",
"cannabis_type30___4" = "Legal cannabis (less than 0.2% THC): {type}",
"cannabis_type30___5" = "Cannabis prescription (e.g., Bedrocan, Bediol): {type}",
"cannabis_type30___6" = "Other cannabis type, smoked or inhaled {other cannabis}",
"cannabis_type30___7" = "Unknown type"
)
# Summarize the frequency of each type of cannabis used
cannabis_usage_summary <- eligible_data %>%
summarise(across(all_of(cannabis_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Cannabis_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Cannabis_Type = recode(Cannabis_Type, !!!cannabis_labels))
# View the table with descriptive labels and frequencies for each type of cannabis
cannabis_usage_summary
View(eligible_data)
View(eligible_data)
knitr::opts_chunk$set(echo = FALSE)
# Ensure each cudit question column is numeric and calculate the cannabis problems score
cudit_data <- eligible_data %>%
mutate(across(starts_with("cu_"), as.numeric)) %>%
mutate(cannabis_problem = rowSums(select(., cu_1:cu_8), na.rm = TRUE))
# Ensure each cudit question column is numeric and calculate the cannabis problems score
cudit_data <- eligible_data %>%
mutate(across(starts_with("cu_"), as.numeric)) %>%
mutate(cannabis_problem = rowSums(select(., cu_1:cu_8), na.rm = TRUE))
# Ensure each cudit question column is numeric and calculate the cannabis problems score
cudit_data <- eligible_data %>%
mutate(across(starts_with("cu_"), as.numeric)) %>%
mutate(cannabis_problem = rowSums(select(., cu_1:cu_8), na.rm = TRUE))
library(dplyr)
library(dplyr)
# Ensure each cudit question column is numeric and calculate the cannabis problems score
cudit_data <- eligible_data %>%
mutate(across(starts_with("cu_"), as.numeric)) %>%
mutate(cannabis_problem = rowSums(select(., cu_1:cu_8), na.rm = TRUE))
# View the updated data with the new cannabis_problem_column column
head(cudit_data)
library(dplyr)
# Ensure each cudit question column is numeric and calculate the cannabis problems score
cudit_data <- eligible_data %>%
mutate(across(starts_with("cu_"), as.numeric)) %>%
mutate(cannabis_problem = rowSums(select(., cu_1:cu_8), na.rm = TRUE))
# View the updated data with the new cannabis_problem_column column
head(cudit_data)
library(dplyr)
# Ensure each cudit question column is numeric and calculate the cannabis problems score
cudit_data <- eligible_data %>%
mutate(across(starts_with("cu_"), as.numeric)) %>%
mutate(cannabis_problem = rowSums(select(., cu_1:cu_8), na.rm = TRUE))
# View the updated data with the new cannabis_problem_column column
head(cudit_data)
# Step 2: Calculate the mean of nicotine_problem_score
cannabis_problem <- cudit_data %>%
summarise(cannabis_problem = mean(cannabis_problem, na.rm = TRUE))
# View the mean nicotine problem score
cannabis_problem
# Define descriptive labels for each motive
motive_labels <- c(
"1" = "Recreational",
"2" = "Medical",
"3" = "Both recreational and medical",
"4" = "Don't know"
)
# Summarize the frequency of each cannabis motive
cannabis_motive_summary <- eligible_data %>%
mutate(motives_cannabis = as.character(motives_cannabis)) %>%  # Convert to character for recoding
mutate(motives_cannabis = recode(motives_cannabis, !!!motive_labels)) %>%
count(motives_cannabis) %>%
rename(Motive = motives_cannabis, Frequency = n)
# View the summary table
cannabis_motive_summary
# Define descriptive labels for each response
treatment_labels <- c(
"0" = "No, I have never received it",
"1" = "Yes, I am currently receiving it",
"2" = "Yes, I have received it in the past"
)
# Summarize the frequency of each treatment response
cannabis_treatment_summary <- eligible_data %>%
mutate(ca_modtaget = as.character(ca_modtaget)) %>%  # Convert to character for recoding
mutate(ca_modtaget = recode(ca_modtaget, !!!treatment_labels)) %>%
count(ca_modtaget) %>%
rename(Treatment_Status = ca_modtaget, Frequency = n)
# View the summary table
cannabis_treatment_summary
# Define descriptive labels for each response
attempt_labels <- c(
"1" = "Yes, I have tried to reduce my use, but not stop",
"2" = "Yes, I have tried to stop using cannabis",
"0" = "No, I have never tried to reduce or stop using cannabis"
)
# Summarize the frequency of each attempt response
cannabis_attempt_summary <- eligible_data %>%
mutate(ca_reduce = as.character(ca_reduce)) %>%  # Convert to character for recoding
mutate(ca_reduce = recode(ca_reduce, !!!attempt_labels)) %>%
count(ca_reduce) %>%
rename(Attempt_Status = ca_reduce, Frequency = n)
# View the summary table
cannabis_attempt_summary
# Define descriptive labels for each response
plans_labels <- c(
"1" = "Yes, I am currently trying to reduce my use, but not stop",
"2" = "Yes, I am currently trying to stop",
"0" = "No, I am not trying to reduce or stop using cannabis"
)
# Summarize the frequency of each plan response
cannabis_plans_summary <- eligible_data %>%
mutate(ca_plans = as.character(ca_plans)) %>%  # Convert to character for recoding
mutate(ca_plans = recode(ca_plans, !!!plans_labels)) %>%
count(ca_plans) %>%
rename(Plan_Status = ca_plans, Frequency = n)
# View the summary table
cannabis_plans_summary
# Define descriptive labels for each response
other_drugs_labels <- c(
"1" = "Yes, but only once",
"2" = "Yes, more than once",
"0" = "No, never"
)
# Summarize the frequency of each response
other_drug_summary <- eligible_data %>%
mutate(provetandre = as.character(provetandre)) %>%  # Convert to character for recoding
mutate(provetandre = recode(provetandre, !!!other_drugs_labels)) %>%
count(provetandre) %>%
rename(Response = provetandre, Frequency = n)
# View the summary table
other_drug_summary
library(dplyr)
# Define descriptive labels for each specific type of other drug
other_drug_types_labels <- c(
"type_provetother__1" = "ADHD medication (e.g., Ritalin, Concerta)",
"type_provetother__2" = "Anxiolytics and/or sleeping pills (e.g., Benzodiazepines)",
"type_provetother__3" = "Amphetamine",
"type_provetother__4" = "Ecstasy/MDMA",
"type_provetother__5" = "Ketamine",
"type_provetother__6" = "Cocaine",
"type_provetother__7" = "Nitrous oxide",
"type_provetother__8" = "LSD, psilocybin mushrooms, or other psychedelics",
"type_provetother__9" = "Opioids/morphine preparations (Dolol, Oxycontin, Tramadol, Fentanyl, Heroin, etc.)",
"type_provetother__10" = "Other drugs {andet_othertype}"
)
# Summarize the general response for trying other drugs
other_drug_summary <- eligible_data %>%
mutate(provetandre = as.character(provetandre)) %>%  # Convert to character for recoding
mutate(provetandre = recode(provetandre, !!!other_drugs_labels)) %>%
count(provetandre) %>%
rename(Response = provetandre, Frequency = n)
# Summarize the frequency of each specific type of other drug tried
other_drug_types_summary <- eligible_data %>%
summarise(across(all_of(other_drug_types_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Drug_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Drug_Type = recode(Drug_Type, !!!other_drug_types_labels))
library(dplyr)
# Define descriptive labels for each response to "Have you ever tried other drugs besides cannabis?"
other_drugs_labels <- c(
"1" = "Yes, but only once",
"2" = "Yes, more than once",
"0" = "No, never"
)
# Define columns for specific types of other drugs tried
other_drug_types_columns <- paste0("type_provetother__", 1:10)  # Adjust the range if needed
# Define descriptive labels for each specific type of other drug
other_drug_types_labels <- c(
"type_provetother__1" = "ADHD medication (e.g., Ritalin, Concerta)",
"type_provetother__2" = "Anxiolytics and/or sleeping pills (e.g., Benzodiazepines)",
"type_provetother__3" = "Amphetamine",
"type_provetother__4" = "Ecstasy/MDMA",
"type_provetother__5" = "Ketamine",
"type_provetother__6" = "Cocaine",
"type_provetother__7" = "Nitrous oxide",
"type_provetother__8" = "LSD, psilocybin mushrooms, or other psychedelics",
"type_provetother__9" = "Opioids/morphine preparations (Dolol, Oxycontin, Tramadol, Fentanyl, Heroin, etc.)",
"type_provetother__10" = "Other drugs {andet_othertype}"
)
# Summarize the general response for trying other drugs
other_drug_summary <- eligible_data %>%
mutate(provetandre = as.character(provetandre)) %>%  # Convert to character for recoding
mutate(provetandre = recode(provetandre, !!!other_drugs_labels)) %>%
count(provetandre) %>%
rename(Response = provetandre, Frequency = n)
# Summarize the frequency of each specific type of other drug tried
other_drug_types_summary <- eligible_data %>%
summarise(across(all_of(other_drug_types_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Drug_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Drug_Type = recode(Drug_Type, !!!other_drug_types_labels))
library(dplyr)
library(dplyr)
# Define descriptive labels for each response to "Have you ever tried other drugs besides cannabis?"
other_drugs_labels <- c(
"1" = "Yes, but only once",
"2" = "Yes, more than once",
"0" = "No, never"
)
# Define columns for specific types of other drugs tried
other_drug_types_columns <- paste0("type_provetother__", 1:10)  # Adjust the range if needed
# Define descriptive labels for each specific type of other drug
other_drug_types_labels <- c(
"type_provetother__1" = "ADHD medication (e.g., Ritalin, Concerta)",
"type_provetother__2" = "Anxiolytics and/or sleeping pills (e.g., Benzodiazepines)",
"type_provetother__3" = "Amphetamine",
"type_provetother__4" = "Ecstasy/MDMA",
"type_provetother__5" = "Ketamine",
"type_provetother__6" = "Cocaine",
"type_provetother__7" = "Nitrous oxide",
"type_provetother__8" = "LSD, psilocybin mushrooms, or other psychedelics",
"type_provetother__9" = "Opioids/morphine preparations (Dolol, Oxycontin, Tramadol, Fentanyl, Heroin, etc.)",
"type_provetother__10" = "Other drugs {andet_othertype}"
)
# Summarize the general response for trying other drugs
other_drug_summary <- eligible_data %>%
mutate(provetandre = as.character(provetandre)) %>%  # Convert to character for recoding
mutate(provetandre = recode(provetandre, !!!other_drugs_labels)) %>%
count(provetandre) %>%
rename(Response = provetandre, Frequency = n)
# Summarize the frequency of each specific type of other drug tried
other_drug_types_summary <- eligible_data %>%
summarise(across(all_of(other_drug_types_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Drug_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Drug_Type = recode(Drug_Type, !!!other_drug_types_labels))
library(dplyr)
library(tidyr)  # Load tidyr to use pivot_longer()
# Define descriptive labels for each response to "Have you ever tried other drugs besides cannabis?"
other_drugs_labels <- c(
"1" = "Yes, but only once",
"2" = "Yes, more than once",
"0" = "No, never"
)
# Define columns for specific types of other drugs tried
other_drug_types_columns <- paste0("type_provetother__", 1:10)  # Adjust the range if needed
# Define descriptive labels for each specific type of other drug
other_drug_types_labels <- c(
"type_provetother__1" = "ADHD medication (e.g., Ritalin, Concerta)",
"type_provetother__2" = "Anxiolytics and/or sleeping pills (e.g., Benzodiazepines)",
"type_provetother__3" = "Amphetamine",
"type_provetother__4" = "Ecstasy/MDMA",
"type_provetother__5" = "Ketamine",
"type_provetother__6" = "Cocaine",
"type_provetother__7" = "Nitrous oxide",
"type_provetother__8" = "LSD, psilocybin mushrooms, or other psychedelics",
"type_provetother__9" = "Opioids/morphine preparations (Dolol, Oxycontin, Tramadol, Fentanyl, Heroin, etc.)",
"type_provetother__10" = "Other drugs {andet_othertype}"
)
# Summarize the general response for trying other drugs
other_drug_summary <- eligible_data %>%
mutate(provetandre = as.character(provetandre)) %>%  # Convert to character for recoding
mutate(provetandre = recode(provetandre, !!!other_drugs_labels)) %>%
count(provetandre) %>%
rename(Response = provetandre, Frequency = n)
# Summarize the frequency of each specific type of other drug tried
other_drug_types_summary <- eligible_data %>%
summarise(across(all_of(other_drug_types_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Drug_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Drug_Type = recode(Drug_Type, !!!other_drug_types_labels))
library(dplyr)
library(tidyr)  # Load tidyr to use pivot_longer()
# Define descriptive labels for each response to "Have you ever tried other drugs besides cannabis?"
other_drugs_labels <- c(
"1" = "Yes, but only once",
"2" = "Yes, more than once",
"0" = "No, never"
)
# Define columns for specific types of other drugs tried
other_drug_types_columns <- paste0("type_provetother___", 1:10)  # Adjust the range if needed
# Define descriptive labels for each specific type of other drug
other_drug_types_labels <- c(
"type_provetother___1" = "ADHD medication (e.g., Ritalin, Concerta)",
"type_provetother___2" = "Anxiolytics and/or sleeping pills (e.g., Benzodiazepines)",
"type_provetother___3" = "Amphetamine",
"type_provetother___4" = "Ecstasy/MDMA",
"type_provetother___5" = "Ketamine",
"type_provetother___6" = "Cocaine",
"type_provetother___7" = "Nitrous oxide",
"type_provetother___8" = "LSD, psilocybin mushrooms, or other psychedelics",
"type_provetother___9" = "Opioids/morphine preparations (Dolol, Oxycontin, Tramadol, Fentanyl, Heroin, etc.)",
"type_provetother___10" = "Other drugs {andet_othertype}"
)
# Summarize the general response for trying other drugs
other_drug_summary <- eligible_data %>%
mutate(provetandre = as.character(provetandre)) %>%  # Convert to character for recoding
mutate(provetandre = recode(provetandre, !!!other_drugs_labels)) %>%
count(provetandre) %>%
rename(Response = provetandre, Frequency = n)
# Summarize the frequency of each specific type of other drug tried
other_drug_types_summary <- eligible_data %>%
summarise(across(all_of(other_drug_types_columns), ~ sum(. == 1, na.rm = TRUE))) %>%
pivot_longer(cols = everything(), names_to = "Drug_Type", values_to = "Frequency") %>%
# Apply descriptive labels
mutate(Drug_Type = recode(Drug_Type, !!!other_drug_types_labels))
# View the general summary and specific drug types summary
list(
General_Summary = other_drug_summary,
Specific_Drug_Types_Summary = other_drug_types_summary
)
library(dplyr)
# Calculate scores for each facet
facet_scores <- eligible_data %>%
mutate(
coping_score = rowSums(select(., ends_with("coping")), na.rm = TRUE),
social_score = rowSums(select(., ends_with("social")), na.rm = TRUE),
enhancement_score = rowSums(select(., ends_with("enhancement")), na.rm = TRUE),
conformity_score = rowSums(select(., ends_with("conformity")), na.rm = TRUE),
expansion_score = rowSums(select(., ends_with("expansion")), na.rm = TRUE)
)
# View the updated data with facet scores
head(facet_scores)
View(gender_table)
library(dplyr)
# Calculate scores for each facet
mmm_scores <- eligible_data %>%
mutate(
coping_score = rowSums(select(., ends_with("coping")), na.rm = TRUE),
social_score = rowSums(select(., ends_with("social")), na.rm = TRUE),
enhancement_score = rowSums(select(., ends_with("enhancement")), na.rm = TRUE),
conformity_score = rowSums(select(., ends_with("conformity")), na.rm = TRUE),
expansion_score = rowSums(select(., ends_with("expansion")), na.rm = TRUE)
)
# View the updated data with facet scores
head(mmm_scores)
View(facet_scores)
View(mmm_scores)
View(mmm_scores)
View(mmm_scores)
library(dplyr)
# Calculate both sum and mean scores for each facet
mmm_scores <- eligible_data %>%
mutate(
# Sum scores for each facet
coping_sum = rowSums(select(., ends_with("coping")), na.rm = TRUE),
social_sum = rowSums(select(., ends_with("social")), na.rm = TRUE),
enhancement_sum = rowSums(select(., ends_with("enhancement")), na.rm = TRUE),
conformity_sum = rowSums(select(., ends_with("conformity")), na.rm = TRUE),
expansion_sum = rowSums(select(., ends_with("expansion")), na.rm = TRUE),
# Mean scores for each facet
coping_mean = rowMeans(select(., ends_with("coping")), na.rm = TRUE),
social_mean = rowMeans(select(., ends_with("social")), na.rm = TRUE),
enhancement_mean = rowMeans(select(., ends_with("enhancement")), na.rm = TRUE),
conformity_mean = rowMeans(select(., ends_with("conformity")), na.rm = TRUE),
expansion_mean = rowMeans(select(., ends_with("expansion")), na.rm = TRUE)
)
# View the updated data with facet scores
head(mmm_scores)
View(mmm_scores)
View(mmm_scores)
library(dplyr)
# Calculate WHO-5 raw and scaled scores
who_scores <- eligible_data %>%
mutate(
# Sum the responses for the WHO-5 items
who_raw_score = rowSums(select(., starts_with("who_")), na.rm = TRUE),
# Scale the raw score to a 0-100 range
who_scaled_score = who_raw_score * 4
)
# View the updated data with WHO-5 scores
head(who_scores)
library(dplyr)
# Calculate PHQ-4, PHQ-2, and GAD-2 scores
phq4_scores <- eligible_data %>%
mutate(
# Sum the first two items for PHQ-2 (depression subscale)
phq2_score = rowSums(select(., phq1, phq2), na.rm = TRUE),
# Sum the last two items for GAD-2 (anxiety subscale)
gad2_score = rowSums(select(., phq3, phq4), na.rm = TRUE),
# Sum all four items for the total PHQ-4 score
phq4_total_score = rowSums(select(., phq1, phq2, phq3, phq4), na.rm = TRUE)
)
# View the updated data with PHQ-4, PHQ-2, and GAD-2 scores
head(phq4_scores)
library(dplyr)
# Calculate PHQ-4, PHQ-2, GAD-2 scores, and the general mean for PHQ-4
phq4_scores <- eligible_data %>%
mutate(
# Sum the first two items for PHQ-2 (depression subscale)
phq2_score = rowSums(select(., phq1, phq2), na.rm = TRUE),
# Sum the last two items for GAD-2 (anxiety subscale)
gad2_score = rowSums(select(., phq3, phq4), na.rm = TRUE),
# Sum all four items for the total PHQ-4 score
phq4_total_score = rowSums(select(., phq1, phq2, phq3, phq4), na.rm = TRUE),
# Calculate the mean score across all four PHQ-4 items
phq4_mean_score = rowMeans(select(., phq1, phq2, phq3, phq4), na.rm = TRUE)
)
# View the updated data with PHQ-4, PHQ-2, GAD-2 scores, and the mean score
head(phq4_scores)
library(dplyr)
# Calculate WHO-5 raw and scaled scores
who_scores <- eligible_data %>%
mutate(
# Sum the responses for the WHO-5 items
who_raw_score = rowSums(select(., starts_with("who_")), na.rm = TRUE),
# Scale the raw score to a 0-100 range by multiplying by 4
who_scaled_score = who_raw_score * 4
)
# View the updated data with WHO-5 scores
head(who_scores)
library(dplyr)
# Calculate DERS-16 total and facet scores
ders_scores <- eligible_data %>%
mutate(
# Total DERS-16 score
ders_total_score = rowSums(select(., starts_with("ders_")), na.rm = TRUE),
# Facet scores
clarity_score = rowSums(select(., ders_2, ders_4), na.rm = TRUE),
goals_score = rowSums(select(., ders_3, ders_6, ders_8), na.rm = TRUE),
impulse_score = rowSums(select(., ders_1, ders_7, ders_12), na.rm = TRUE),
strategies_score = rowSums(select(., ders_10, ders_13, ders_14, ders_16), na.rm = TRUE),
non_acceptance_score = rowSums(select(., ders_5, ders_9, ders_15), na.rm = TRUE),
awareness_score = rowSums(select(., ders_11), na.rm = TRUE)
)
# View the updated data with DERS-16 total and facet scores
head(ders_scores)
library(dplyr)
# Calculate positive DERS total score and subfacet scores
ders_positive_scores <- eligible_data %>%
mutate(
# Total positive DERS score by summing all positive DERS items
dersp_total_score = rowSums(select(., starts_with("dersp_")), na.rm = TRUE),
# Subfacet scores for positive DERS
non_acceptance_positive_score = rowSums(select(., dersp_2, dersp_4, dersp_6, dersp_12), na.rm = TRUE),
goals_positive_score = rowSums(select(., dersp_1, dersp_7, dersp_9, dersp_11), na.rm = TRUE),
impulse_positive_score = rowSums(select(., dersp_3, dersp_5, dersp_8, dersp_10, dersp_13), na.rm = TRUE)
)
library(dplyr)
# Calculate positive DERS total score and subfacet scores
ders_positive_scores <- eligible_data %>%
mutate(
# Total positive DERS score by summing all positive DERS items
dersp_total_score = rowSums(select(., starts_with("dersp_")), na.rm = TRUE),
# Subfacet scores for positive DERS
non_acceptance_positive_score = rowSums(select(., dersp_2, dersp_4, dersp_6, dersp_12), na.rm = TRUE),
goals_positive_score = rowSums(select(., dersp_1, dersp_7, dersp_9, dersp_11), na.rm = TRUE),
impulse_positive_score = rowSums(select(., dersp_3, dersp_5, dersp_8, dersp_10, dersp_13), na.rm = TRUE)
)
library(dplyr)
# Ensure that all dersp_ columns are numeric, then calculate scores
ders_positive_scores <- eligible_data %>%
# Convert all columns that start with dersp_ to numeric
mutate(across(starts_with("dersp_"), as.numeric)) %>%
# Calculate total and subfacet scores
mutate(
# Total positive DERS score by summing all positive DERS items
dersp_total_score = rowSums(select(., starts_with("dersp_")), na.rm = TRUE),
# Subfacet scores for positive DERS
non_acceptance_positive_score = rowSums(select(., dersp_2, dersp_4, dersp_6, dersp_12), na.rm = TRUE),
goals_positive_score = rowSums(select(., dersp_1, dersp_7, dersp_9, dersp_11), na.rm = TRUE),
impulse_positive_score = rowSums(select(., dersp_3, dersp_5, dersp_8, dersp_10, dersp_13), na.rm = TRUE)
)
# View the updated data with positive DERS total and subfacet scores
head(ders_positive_scores)
# Check which dersp_ columns have non-numeric values
non_numeric_check <- eligible_data %>%
summarise(across(starts_with("dersp_"), ~ sum(!is.numeric(.)), .names = "non_numeric_{col}"))
# View the check
non_numeric_check
library(dplyr)
# Convert non-numeric values in DERS item columns to NA, then calculate scores
ders_positive_scores <- eligible_data %>%
# Convert only the exact DERS item columns (e.g., dersp_1, dersp_2, etc.) to numeric
mutate(across(matches("dersp_\\d+$"), ~ as.numeric(as.character(.)))) %>%
# Calculate total and subfacet scores
mutate(
# Total positive DERS score
dersp_total_score = rowSums(select(., matches("dersp_\\d+$")), na.rm = TRUE),
# Subfacet scores for positive DERS
non_acceptance_positive_score = rowSums(select(., dersp_2, dersp_4, dersp_6, dersp_12), na.rm = TRUE),
goals_positive_score = rowSums(select(., dersp_1, dersp_7, dersp_9, dersp_11), na.rm = TRUE),
impulse_positive_score = rowSums(select(., dersp_3, dersp_5, dersp_8, dersp_10, dersp_13), na.rm = TRUE)
)
# View the updated data with positive DERS total and subfacet scores
head(ders_positive_scores)
